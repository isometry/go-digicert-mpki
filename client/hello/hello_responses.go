// Code generated by go-swagger; DO NOT EDIT.

package hello

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HelloReader is a Reader for the Hello structure.
type HelloReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelloReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelloOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHelloUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHelloForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHelloNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewHelloOK creates a HelloOK with default headers values
func NewHelloOK() *HelloOK {
	return &HelloOK{}
}

/* HelloOK describes a response with status code 200, with default header values.

OK
*/
type HelloOK struct {
	Payload string
}

func (o *HelloOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/hello][%d] helloOK  %+v", 200, o.Payload)
}
func (o *HelloOK) GetPayload() string {
	return o.Payload
}

func (o *HelloOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloUnauthorized creates a HelloUnauthorized with default headers values
func NewHelloUnauthorized() *HelloUnauthorized {
	return &HelloUnauthorized{}
}

/* HelloUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type HelloUnauthorized struct {
}

func (o *HelloUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/hello][%d] helloUnauthorized ", 401)
}

func (o *HelloUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelloForbidden creates a HelloForbidden with default headers values
func NewHelloForbidden() *HelloForbidden {
	return &HelloForbidden{}
}

/* HelloForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type HelloForbidden struct {
}

func (o *HelloForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/hello][%d] helloForbidden ", 403)
}

func (o *HelloForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelloNotFound creates a HelloNotFound with default headers values
func NewHelloNotFound() *HelloNotFound {
	return &HelloNotFound{}
}

/* HelloNotFound describes a response with status code 404, with default header values.

Not Found
*/
type HelloNotFound struct {
}

func (o *HelloNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/hello][%d] helloNotFound ", 404)
}

func (o *HelloNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
