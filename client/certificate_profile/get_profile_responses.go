// Code generated by go-swagger; DO NOT EDIT.

package certificate_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/isometry/go-digicert-mpki/models"
)

// GetProfileReader is a Reader for the GetProfile structure.
type GetProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProfileOK creates a GetProfileOK with default headers values
func NewGetProfileOK() *GetProfileOK {
	return &GetProfileOK{}
}

/* GetProfileOK describes a response with status code 200, with default header values.

OK
*/
type GetProfileOK struct {
	Payload *models.GetProfileResponse
}

func (o *GetProfileOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/profile/{profileId}][%d] getProfileOK  %+v", 200, o.Payload)
}
func (o *GetProfileOK) GetPayload() *models.GetProfileResponse {
	return o.Payload
}

func (o *GetProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetProfileResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfileUnauthorized creates a GetProfileUnauthorized with default headers values
func NewGetProfileUnauthorized() *GetProfileUnauthorized {
	return &GetProfileUnauthorized{}
}

/* GetProfileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProfileUnauthorized struct {
}

func (o *GetProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/profile/{profileId}][%d] getProfileUnauthorized ", 401)
}

func (o *GetProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProfileForbidden creates a GetProfileForbidden with default headers values
func NewGetProfileForbidden() *GetProfileForbidden {
	return &GetProfileForbidden{}
}

/* GetProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetProfileForbidden struct {
}

func (o *GetProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/profile/{profileId}][%d] getProfileForbidden ", 403)
}

func (o *GetProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProfileNotFound creates a GetProfileNotFound with default headers values
func NewGetProfileNotFound() *GetProfileNotFound {
	return &GetProfileNotFound{}
}

/* GetProfileNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetProfileNotFound struct {
}

func (o *GetProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/profile/{profileId}][%d] getProfileNotFound ", 404)
}

func (o *GetProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
