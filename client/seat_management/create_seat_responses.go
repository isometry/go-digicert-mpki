// Code generated by go-swagger; DO NOT EDIT.

package seat_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/isometry/go-digicert-mpki/models"
)

// CreateSeatReader is a Reader for the CreateSeat structure.
type CreateSeatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSeatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSeatCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateSeatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSeatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSeatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSeatCreated creates a CreateSeatCreated with default headers values
func NewCreateSeatCreated() *CreateSeatCreated {
	return &CreateSeatCreated{}
}

/* CreateSeatCreated describes a response with status code 201, with default header values.

Created
*/
type CreateSeatCreated struct {
	Payload models.Response
}

func (o *CreateSeatCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/seat][%d] createSeatCreated  %+v", 201, o.Payload)
}
func (o *CreateSeatCreated) GetPayload() models.Response {
	return o.Payload
}

func (o *CreateSeatCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSeatUnauthorized creates a CreateSeatUnauthorized with default headers values
func NewCreateSeatUnauthorized() *CreateSeatUnauthorized {
	return &CreateSeatUnauthorized{}
}

/* CreateSeatUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateSeatUnauthorized struct {
}

func (o *CreateSeatUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/seat][%d] createSeatUnauthorized ", 401)
}

func (o *CreateSeatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSeatForbidden creates a CreateSeatForbidden with default headers values
func NewCreateSeatForbidden() *CreateSeatForbidden {
	return &CreateSeatForbidden{}
}

/* CreateSeatForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateSeatForbidden struct {
}

func (o *CreateSeatForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/seat][%d] createSeatForbidden ", 403)
}

func (o *CreateSeatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSeatNotFound creates a CreateSeatNotFound with default headers values
func NewCreateSeatNotFound() *CreateSeatNotFound {
	return &CreateSeatNotFound{}
}

/* CreateSeatNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateSeatNotFound struct {
}

func (o *CreateSeatNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/seat][%d] createSeatNotFound ", 404)
}

func (o *CreateSeatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
