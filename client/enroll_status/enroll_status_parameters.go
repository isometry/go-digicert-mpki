// Code generated by go-swagger; DO NOT EDIT.

package enroll_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewEnrollStatusParams creates a new EnrollStatusParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEnrollStatusParams() *EnrollStatusParams {
	return &EnrollStatusParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEnrollStatusParamsWithTimeout creates a new EnrollStatusParams object
// with the ability to set a timeout on a request.
func NewEnrollStatusParamsWithTimeout(timeout time.Duration) *EnrollStatusParams {
	return &EnrollStatusParams{
		timeout: timeout,
	}
}

// NewEnrollStatusParamsWithContext creates a new EnrollStatusParams object
// with the ability to set a context for a request.
func NewEnrollStatusParamsWithContext(ctx context.Context) *EnrollStatusParams {
	return &EnrollStatusParams{
		Context: ctx,
	}
}

// NewEnrollStatusParamsWithHTTPClient creates a new EnrollStatusParams object
// with the ability to set a custom HTTPClient for a request.
func NewEnrollStatusParamsWithHTTPClient(client *http.Client) *EnrollStatusParams {
	return &EnrollStatusParams{
		HTTPClient: client,
	}
}

/* EnrollStatusParams contains all the parameters to send to the API endpoint
   for the enroll status operation.

   Typically these are written to a http.Request.
*/
type EnrollStatusParams struct {

	/* ProfileID.

	   profile_id
	*/
	ProfileID *string

	/* SeatID.

	   seatId
	*/
	SeatID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the enroll status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EnrollStatusParams) WithDefaults() *EnrollStatusParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the enroll status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EnrollStatusParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the enroll status params
func (o *EnrollStatusParams) WithTimeout(timeout time.Duration) *EnrollStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the enroll status params
func (o *EnrollStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the enroll status params
func (o *EnrollStatusParams) WithContext(ctx context.Context) *EnrollStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the enroll status params
func (o *EnrollStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the enroll status params
func (o *EnrollStatusParams) WithHTTPClient(client *http.Client) *EnrollStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the enroll status params
func (o *EnrollStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProfileID adds the profileID to the enroll status params
func (o *EnrollStatusParams) WithProfileID(profileID *string) *EnrollStatusParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the enroll status params
func (o *EnrollStatusParams) SetProfileID(profileID *string) {
	o.ProfileID = profileID
}

// WithSeatID adds the seatID to the enroll status params
func (o *EnrollStatusParams) WithSeatID(seatID string) *EnrollStatusParams {
	o.SetSeatID(seatID)
	return o
}

// SetSeatID adds the seatId to the enroll status params
func (o *EnrollStatusParams) SetSeatID(seatID string) {
	o.SeatID = seatID
}

// WriteToRequest writes these params to a swagger request
func (o *EnrollStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProfileID != nil {

		// query param profile_id
		var qrProfileID string

		if o.ProfileID != nil {
			qrProfileID = *o.ProfileID
		}
		qProfileID := qrProfileID
		if qProfileID != "" {

			if err := r.SetQueryParam("profile_id", qProfileID); err != nil {
				return err
			}
		}
	}

	// path param seatId
	if err := r.SetPathParam("seatId", o.SeatID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
